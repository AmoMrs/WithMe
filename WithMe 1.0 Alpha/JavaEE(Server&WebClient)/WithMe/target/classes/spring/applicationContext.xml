<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- 包扫描 -->
	<context:component-scan base-package="com.main">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 引入jdbc配置文件 -->
	<!--  
    <context:property-placeholder location="classpath:config/jdbc.properties"/>
    -->
    <bean id="messageService" class="com.main.service.MessageServiceImplement"></bean>
    <bean id="userService" class="com.main.service.UserServiceImplement"></bean>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:config/jdbc.properties" />
    </bean>
    
	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driverClassName}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${userName}"></property>
		<property name="password" value="${password}"></property>
	</bean>
	
	<!-- AOP -->
	<aop:aspectj-autoproxy/>
	
	<!-- 配置 hibernate session -->
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>  
                <prop key="hibernate.show_sql">true</prop>  
                <prop key="hibernate.format_sql">true</prop>
                
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="current_session_context_class">thread</prop>
                <prop key="hibernate.current_session_context_calss">org.springframework.orm.hibernate4.SpringSessionContext</prop>
			</props>
		</property>
		<property name="packagesToScan">  
            <list>  
                <value>com.main.entity</value>  
            </list>  
        </property>  
	</bean>
	
	<!-- 配置事务管理器 -->
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="list*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="find*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
		
	
	 
	<!-- 配置事务，使用代理的方式 -->  
    <!--  
    <bean id="transactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">    
        <property name="transactionManager" ref="transactionManager"></property>    
        <property name="transactionAttributes">    
            <props>    
                <prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>    
                <prop key="modify*">PROPAGATION_REQUIRED,-myException</prop>    
                <prop key="del*">PROPAGATION_REQUIRED</prop>    
                <prop key="*">PROPAGATION_REQUIRED</prop>    
            </props>    
        </property>    
    </bean>
    -->
    
    <aop:config proxy-target-class="true">
    	<aop:advisor pointcut="execution(public * com.main.service.*Service.*(..))" advice-ref="txAdvice"/>
    </aop:config>
    
   </beans>